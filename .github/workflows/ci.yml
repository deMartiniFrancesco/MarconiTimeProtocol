name: CI

on:
  pull_request:
    branches:
      - main
      - release/v*

jobs:
  security_hardening:
    name: Check security hardening
    runs-on: ubuntu-latest
    steps:
    - name: Clone the repository
      uses: actions/checkout@v3
    - name: Ensure SHA pinned actions
      uses: zgosalvez/github-actions-ensure-sha-pinned-actions@afbf9b485669c7ad13347734c9f146175e83cb43

  testing:
    name: Run ${{ matrix.category }} testing
    needs: security_hardening
    runs-on: ubuntu-latest
    strategy:
      matrix:
        category: [static, unit, widget]
      fail-fast: false
    steps:
    - name: Clone the repository
      uses: actions/checkout@v3
      with:
        path: code
    - name: Get Flutter version
      id: get-flutter-version
      uses: zgosalvez/github-actions-get-flutter-version-env@32801c951b68b3b46096e01bdea3305a520569c8
      with:
        pubspec-file-path: code/pubspec.yaml
    - name: Cache Flutter
      id: flutter-cache
      uses: actions/cache@58c146cc91c5b9e778e71775dfe9bf1442ad9a12
      with:
        path: flutter
        key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}-${{ hashFiles('code/pubspec.lock') }}
        restore-keys: |
          ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}-
          ${{ env.cache-name }}-ubuntu-latest-
          ${{ env.cache-name }}-
      env:
        cache-name: flutter-cache
    - name: Clone the Flutter repository
      if: steps.flutter-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: flutter/flutter
        ref: ${{ steps.get-flutter-version.outputs.version }}
        path: flutter
    - name: Add the flutter tool to the path
      run: |
        echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
        echo "$GITHUB_WORKSPACE/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
    - name: Populate the Flutter tool's cache of binary artifacts
      if: steps.flutter-cache.outputs.cache-hit != 'true'
      run: |
        flutter config --no-analytics
        flutter precache
    - name: Get Flutter packages
      run: flutter pub get
      working-directory: code
    - name: Analyze Flutter
      if: matrix.category == 'static'
      uses: zgosalvez/github-actions-analyze-dart@e463176d19cbdeba3813fc46f00202bc0da224c6
      with:
        fail-on-warnings: true
        working-directory: code
    - name: Run Flutter ${{ matrix.category }} tests
      if: matrix.category != 'static'
      run: flutter test --no-pub --coverage --coverage-path=./coverage/lcov.${{ matrix.category }}.info test/${{ matrix.category }}s
      working-directory: code
    - name: Upload code coverage to GitHub
      if: matrix.category != 'static'
      uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
      with:
        name: code-coverage
        path: code/coverage/lcov.${{ matrix.category }}.info

  coverage_report:
    name: Generate coverage report
    needs: testing
    runs-on: ubuntu-latest
    steps:
    - name: Clone the repository
      uses: actions/checkout@v3
    - name: Download code coverage from GitHub
      uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
      with:
        name: code-coverage
        path: coverage
    - name: Report code coverage
      uses: zgosalvez/github-actions-report-lcov@06c2e5e945187378cbb1020c0d0edeb303f43857
      with:
        coverage-files: coverage/lcov.*.info
        minimum-coverage: 90
        artifact-name: code-coverage-report
        github-token: ${{ secrets.GITHUB_TOKEN }}
